import pyrebase
import time
import random
import pandas
import json
import requests

firebaseConfig = {
  "apiKey": "AIzaSyDMQUao7CMkVO-WUwnWT7F3FJ838j5uzXc",
  "authDomain": "realtimedatabase-d0526.firebaseapp.com",
  "databaseURL": "https://realtimedatabase-d0526-default-rtdb.asia-southeast1.firebasedatabase.app",
  "projectId": "realtimedatabase-d0526",
  "storageBucket": "realtimedatabase-d0526.appspot.com",
  "messagingSenderId": "720791270206",
  "appId": "1:720791270206:web:162c279e028f126ccd726f",
  "measurementId": "G-WGX694JH3M"
};

firebase = pyrebase.initialize_app(firebaseConfig)

db=firebase.database()



url = 'http://84d3-35-196-163-116.ngrok.io/ha_prediction'
test_keys =['a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'a10', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a75', 'a76', 'a77', 'a78', 'a79', 'a80', 'a81', 'a82', 'a83', 'a84', 'a85', 'a86', 'a87', 'a88', 'a89', 'a90', 'a91', 'a92', 'a93', 'a94', 'a95', 'a96', 'a97', 'a98', 'a99', 'a100', 'a101', 'a102', 'a103', 'a104', 'a105', 'a106', 'a107', 'a108', 'a109', 'a110', 'a111', 'a112', 'a113', 'a114', 'a115', 'a116', 'a117', 'a118', 'a119', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140']

#Normal data
Novel_data=[-1.1008778e+00, -3.9968398e+00, -4.2858426e+00, -4.5065789e+00,
       -4.0223767e+00, -3.2343676e+00, -1.5661258e+00, -9.9225766e-01,
       -7.5467971e-01,  4.2321173e-02,  1.4895093e-01,  1.8352707e-01,
        2.9487608e-01,  1.9023267e-01,  2.3557500e-01,  2.5348712e-01,
        2.2174240e-01,  5.0233259e-02,  1.7804214e-01,  1.3956318e-01,
        4.6794433e-02,  4.3007139e-02,  1.0654432e-01,  1.2654003e-02,
        3.9948539e-03,  4.5724179e-02, -4.5999362e-02, -7.2666959e-02,
       -7.1077909e-02, -1.5386649e-01, -2.2725443e-01, -2.4926970e-01,
       -2.5348935e-01, -3.3283516e-01, -2.6432996e-01, -3.4582525e-01,
       -3.1078107e-01, -3.3415978e-01, -3.0617791e-01, -1.7456252e-01,
       -2.0616017e-01, -2.2447967e-01, -4.8683931e-02, -1.9621159e-02,
        9.4805186e-02,  1.1678639e-01,  1.8518592e-01,  2.3052577e-01,
        1.3802707e-01,  2.4442554e-01,  2.7169477e-01,  2.5900331e-01,
        2.6920166e-01,  1.2706463e-01,  2.0207339e-01,  2.5598343e-01,
        1.5311526e-01,  2.1021583e-01,  1.9108187e-01,  1.9092702e-01,
        2.1051006e-01,  2.0710764e-01,  2.0488835e-01,  2.0086474e-01,
        3.4691963e-01,  3.4800190e-01,  2.5453726e-01,  3.3197465e-01,
        3.5669030e-01,  3.4992982e-01,  4.3037963e-01,  4.6750163e-01,
        4.8606309e-01,  4.0318840e-01,  4.7895569e-01,  3.9739177e-01,
        4.6412003e-01,  4.5179539e-01,  3.6136121e-01,  3.7983090e-01,
        3.4278528e-01,  3.9910656e-01,  3.8750840e-01,  2.5570346e-01,
        2.8403408e-01,  2.8499257e-01,  2.5010809e-01,  1.7303626e-01,
        1.4942257e-01,  1.4168500e-01,  2.2226096e-01,  1.7284705e-01,
        1.5077932e-01,  1.7656601e-01,  2.8094204e-01,  4.8993901e-01,
        6.6088884e-01,  8.9319330e-01,  1.0269972e+00,  1.2023937e+00,
        1.5574096e+00,  1.8084277e+00,  2.1643459e+00,  2.0707467e+00,
        1.9036136e+00,  1.7644552e+00,  1.5077694e+00,  1.2934277e+00,
        8.9456215e-01,  5.7801575e-01,  2.4434305e-01, -2.8644345e-01,
       -5.1588134e-01, -7.3270694e-01, -8.3246547e-01, -8.0331806e-01,
       -8.3625248e-01, -7.7786456e-01, -7.7475301e-01, -7.3340394e-01,
       -7.2138631e-01, -8.3209517e-01, -7.1198159e-01, -7.5186730e-01,
       -7.5771960e-01, -8.5311967e-01, -7.6698841e-01, -6.8816064e-01,
       -5.1992349e-01,  3.9406169e-02,  5.6032676e-01,  5.3835583e-01,
        6.5688079e-01,  7.8748958e-01,  7.2404623e-01,  5.5578372e-01,
        4.7633335e-01,  7.7381971e-01,  1.1196209e+00, -1.4362499e+00]




# Anomal data
# Novel_data=[8.9486742e-01, -3.8221580e-03, -7.5105205e-01, -1.3965429e+00,
#        -1.7378376e+00, -2.1130203e+00, -2.2132096e+00, -2.2033471e+00,
#        -2.0241906e+00, -1.5914581e+00, -1.0499022e+00, -5.7789108e-01,
#        -3.1313740e-01, -2.0084404e-01, -1.8379899e-01,  1.6525057e-02,
#         5.0921179e-01,  7.7751147e-01,  7.5067496e-01,  7.8843003e-01,
#         7.7137524e-01,  7.3257374e-01,  6.7985885e-01,  6.2183591e-01,
#         6.0469296e-01,  5.8129958e-01,  6.5998204e-01,  6.3413413e-01,
#         6.3558912e-01,  7.6050608e-01,  7.6912011e-01,  7.3457027e-01,
#         7.2108854e-01,  7.5040232e-01,  6.2612794e-01,  5.1689273e-01,
#         5.4554218e-01,  5.0588773e-01,  5.2589320e-01,  4.9186076e-01,
#         5.2836623e-01,  6.2282844e-01,  5.8039006e-01,  5.4824181e-01,
#         5.0770483e-01,  5.1204975e-01,  4.0906504e-01,  3.1038144e-01,
#         3.6845009e-01,  3.8137005e-01,  3.3419976e-01,  1.8130539e-01,
#         2.0183031e-01,  2.9331710e-01,  2.7945872e-01,  2.9958438e-01,
#         2.1474396e-01,  1.8456487e-01,  1.3197654e-01,  5.7778811e-02,
#         1.8044803e-02, -7.1802363e-02,  5.5355480e-03,  6.6041000e-02,
#         4.2362944e-02,  5.5254630e-02, -5.1268990e-03, -5.1986345e-02,
#        -1.5207146e-02, -9.4131254e-03,  2.0942630e-02,  9.2754939e-02,
#         7.3659051e-04, -7.1986495e-02,  7.0326647e-02,  9.1355005e-02,
#         2.8342719e-02,  1.7460518e-01,  2.8679751e-01,  2.7782832e-01,
#         3.1537371e-01,  3.1602348e-01,  3.6637824e-01,  4.4613065e-01,
#         4.1105086e-01,  4.2461382e-01,  4.8312520e-01,  4.5440080e-01,
#         4.6774525e-01,  5.6968959e-01,  5.4844061e-01,  5.2878176e-01,
#         6.3875397e-01,  6.4354817e-01,  6.2231549e-01,  6.2276050e-01,
#         5.7584803e-01,  5.6640109e-01,  5.6635399e-01,  5.7809064e-01,
#         6.1300844e-01,  6.3278994e-01,  5.9456305e-01,  6.1561681e-01,
#         7.2445263e-01,  7.1230460e-01,  6.7086495e-01,  7.1278444e-01,
#         6.6167141e-01,  5.8293314e-01,  5.8568763e-01,  6.1013419e-01,
#         6.9306756e-01,  6.8844189e-01,  6.1338458e-01,  6.0209334e-01,
#         4.2122252e-01,  1.6604014e-01,  1.4347481e-01,  1.9632701e-01,
#         1.6141046e-01,  1.2753130e-01, -1.8672703e-02, -2.3865283e-01,
#        -3.7069690e-01, -5.9290109e-01, -6.3411579e-01, -4.4082747e-01,
#        -5.1807030e-01, -7.0243851e-01, -8.9974628e-01, -1.4415163e+00,
#        -1.8616119e+00, -2.3213812e+00, -2.8848769e+00, -3.5302460e+00,
#        -4.4125149e+00, -3.9033308e+00, -3.5671064e+00, -1.5363381e+00]

input_data_for_model = {}

for key in test_keys:
    for value in Novel_data:
        input_data_for_model[key] = value
        # print(value)
        Novel_data.remove(value)
        break

input_json = json.dumps(input_data_for_model)
print((input_data_for_model))


db.child("CardioX").set(input_data_for_model)














# Names =["Nilupa","Nimshan","Nishalya","Dhanuka","Akila"]
# Results = [15,28,49,69,83,94]
# Addresses = [
#   ["1234 NW Bobcat Lane", "St. Robert", "MO 65584-5678."],
#   ["4455 Landing Lange", "APT 4Louisville", "KY 40018-1234"],
#   ["CEOGlobal Co.","90210 Broadway Blvd.","Nashville", "TN 37011-5678"],
#   ["6543 N 9th Street","APO, AA 33608-1234"],
#   ["Notting Estate","123 Notting Lane","Nottingham","NG1 1AJ","England"]
# ]
# data={"name":"Nilupa", "Marks":1, "Address": ["No 15,","Katakumbura","Kadugannawa"]}
# db.child("CardioX").set(data)
#
# while True:
#     randName= random.randint(0, 4)
#     randMarks = random.randint(0, 5)
#     randAddress = random.randint(0, 4)
#     data["name"]=Names[randName]
#     data["Marks"]=Results[randMarks]
#     data["Address"] = Addresses[randAddress]
#     db.child("CardioX").set(data)
#     print(data)
#     time.sleep(5)